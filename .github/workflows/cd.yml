name: EC2 deploy from docker

on:
  push:
    branches: ["QA"]
  pull_request:
    branches: ["main"]

jobs:
  deploy-qa:
    if: github.ref == 'refs/heads/QA'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
 
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/qa:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/qa:latest

  deploy-production:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
 
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/prd:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/prd:latest

  ssh-connect-ec2-QA01:
    needs: [deploy-qa]
    uses: ./.github/workflows/setup.yml
    secrets:
      ec2_host: ${{ secrets.EC2_HOST_QA }}
      ec2_key: ${{ secrets.EC2_PRIVATE_KEY_QA }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      repository_name: ${{ secrets.DOCKER_REPOSITORY_NAME_QA }}

  ssh-connect-ec2-QA02:
    needs: [deploy-qa]
    uses: ./.github/workflows/setup.yml
    secrets:
      ec2_host: ${{ secrets.EC2_SERVER_QA_TWO }}
      ec2_key: ${{ secrets.EC2_PRIVATE_KEY_QA }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      repository_name: ${{ secrets.DOCKER_REPOSITORY_NAME_QA }}
  
  ssh-connect-ec2-PROD1:
    needs: [deploy-production]
    uses: ./.github/workflows/setup.yml
    secrets:
      ec2_host: ${{ secrets.EC2_HOST_PROD }}
      ec2_key: ${{ secrets.EC2_PRIVATE_KEY_QA }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      repository_name: ${{ secrets.DOCKER_REPOSITORY_NAME_PROD }}

  ssh-connect-ec2-PROD2:
    needs: [deploy-production]
    uses: ./.github/workflows/setup.yml
    secrets:
      ec2_host: ${{ secrets.EC2_HOST_PROD_TWO }}
      ec2_key: ${{ secrets.EC2_PRIVATE_KEY_QA }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      repository_name: ${{ secrets.DOCKER_REPOSITORY_NAME_PROD }}
  
  ssh-connect-ec2-PROD3:
    needs: [deploy-production]
    uses: ./.github/workflows/setup.yml
    secrets:
      ec2_host: ${{ secrets.EC2_HOST_PROD_THREE }}
      ec2_key: ${{ secrets.EC2_PRIVATE_KEY_QA }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      repository_name: ${{ secrets.DOCKER_REPOSITORY_NAME_PROD }}
  
  ssh-connect-ec2-PROD4:
    needs: [deploy-production]
    uses: ./.github/workflows/setup.yml
    secrets:
      ec2_host: ${{ secrets.EC2_HOST_PROD_FOUR }}
      ec2_key: ${{ secrets.EC2_PRIVATE_KEY_QA }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      repository_name: ${{ secrets.DOCKER_REPOSITORY_NAME_PROD }}
